// <auto-generated />
using System;
using Booking2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking2.Migrations
{
    [DbContext(typeof(Booking2Context))]
    partial class Booking2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking2.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BedCount");

                    b.Property<int>("BuildingTypeId");

                    b.Property<string>("City");

                    b.Property<string>("Condition");

                    b.Property<bool>("HasBalkony");

                    b.Property<bool>("HasParking");

                    b.Property<bool>("HasWlan");

                    b.Property<bool>("IsActive");

                    b.Property<double?>("ParkingPrice");

                    b.Property<double>("PricePerDay");

                    b.Property<double>("Space");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.Property<double?>("WlanPrice");

                    b.Property<string>("ZipCode");

                    b.HasKey("BuildingId");

                    b.HasIndex("BuildingTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("Booking2.Models.BuildingType", b =>
                {
                    b.Property<int>("BuildingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("BuildingTypeId");

                    b.ToTable("BuildingType");
                });

            modelBuilder.Entity("Booking2.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId");

                    b.Property<byte[]>("Content");

                    b.Property<string>("ContentType");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ImageId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Booking2.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId");

                    b.Property<DateTime>("From");

                    b.Property<bool>("GuestWasHere");

                    b.Property<double>("PricePerDays");

                    b.Property<DateTime>("To");

                    b.Property<int>("UserId");

                    b.HasKey("RentId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("UserId");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("Booking2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<string>("Password");

                    b.Property<int>("UserTypeId");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Booking2.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("UserTypeId");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("Booking2.Models.Building", b =>
                {
                    b.HasOne("Booking2.Models.BuildingType", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Booking2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Booking2.Models.Image", b =>
                {
                    b.HasOne("Booking2.Models.Building", "Building")
                        .WithMany("ImageList")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Booking2.Models.Rent", b =>
                {
                    b.HasOne("Booking2.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Booking2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Booking2.Models.User", b =>
                {
                    b.HasOne("Booking2.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
