@model Booking2.Models.Rent

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Rent</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="From" class="control-label"></label>
                <input asp-for="From" class="form-control" type="date" onchange="calculatePrice()" />
                <span asp-validation-for="From" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="To" class="control-label"></label>
                <input asp-for="To" class="form-control" type="date" onchange="calculatePrice()" />
                <span asp-validation-for="To" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PricePerDays" class="control-label"></label>
                <input type="number" readonly id="PricePerDays" name="PricePerDays" class="form-control"></input>
            </div>
            <div>
                <input type="button" value="Check Availability" onclick="checkAvailability()" class="btn btn-info" />
            </div>
            <br />
            <div class="form-group">
                <input id="submitRent" type="submit" value="Save" class="btn btn-success" style="visibility:hidden" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@*Calculates the Price for the specified Days*@
<script type="text/javascript">
    function calculatePrice() {
        document.getElementById("submitRent").style.visibility = "hidden";
        var from = document.getElementById("From").value;
        var to = document.getElementById("To").value;
        if (from == null || from == "" || to == null || to == "") {
            document.getElementById("PricePerDays").innerHTML = 0;
            document.getElementById("PricePerDays").value = 0;
        } else {
            from = new Date(from);
            to = new Date(to);
            var timeDiff = Math.abs(to.getTime() - from.getTime());
            var diffDay = Math.ceil(timeDiff / (1000 * 3600 * 24));
            var result = 0;
            @{ 
                    var building = ViewData["Building"] as Building;
                <text>
                    result = diffDay* @building.PricePerDay;
               </text>
                }
            document.getElementById("PricePerDays").innerHTML = result;
            document.getElementById("PricePerDays").value = result;
            
        }

        
    }

    function checkAvailability() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.status == 400) {
                document.getElementById("submitRent").style.visibility = "hidden";
            }
            else {
                document.getElementById("submitRent").style.visibility = "visible";
            }

        };
        var fromD = document.getElementById("From").value;
        var toD = document.getElementById("To").value;
        xhttp.open("GET", "/Rents/CheckAvailability?fromDate=" + fromD + "&toDate=" + toD, true);
        xhttp.send();
    }
</script>
